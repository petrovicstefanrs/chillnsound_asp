//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChillNSound.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SoundboardDBEntities : DbContext
    {
        public SoundboardDBEntities()
            : base("name=SoundboardDBEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Sound> Sounds { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<About> Abouts { get; set; }
    
        public virtual int SoundInsert(string soundUrl, string imageUrl)
        {
            var soundUrlParameter = soundUrl != null ?
                new ObjectParameter("SoundUrl", soundUrl) :
                new ObjectParameter("SoundUrl", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SoundInsert", soundUrlParameter, imageUrlParameter);
        }
    
        public virtual int SoundUpdate(Nullable<int> idSound, string soundUrl, string imageUrl)
        {
            var idSoundParameter = idSound.HasValue ?
                new ObjectParameter("idSound", idSound) :
                new ObjectParameter("idSound", typeof(int));
    
            var soundUrlParameter = soundUrl != null ?
                new ObjectParameter("SoundUrl", soundUrl) :
                new ObjectParameter("SoundUrl", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SoundUpdate", idSoundParameter, soundUrlParameter, imageUrlParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idUserParameter);
        }
    
        public virtual int SoundDelete(Nullable<int> idSound)
        {
            var idSoundParameter = idSound.HasValue ?
                new ObjectParameter("IdSound", idSound) :
                new ObjectParameter("IdSound", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SoundDelete", idSoundParameter);
        }
    
        public virtual int UpdateAbout(Nullable<int> idAbout, string image, string name, string desc)
        {
            var idAboutParameter = idAbout.HasValue ?
                new ObjectParameter("IdAbout", idAbout) :
                new ObjectParameter("IdAbout", typeof(int));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("Desc", desc) :
                new ObjectParameter("Desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAbout", idAboutParameter, imageParameter, nameParameter, descParameter);
        }
    
        public virtual int UserInsert(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserInsert", usernameParameter, passwordParameter);
        }
    
        public virtual int UserUpdate(Nullable<int> idUser, string username, string password)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserUpdate", idUserParameter, usernameParameter, passwordParameter);
        }
    }
}
